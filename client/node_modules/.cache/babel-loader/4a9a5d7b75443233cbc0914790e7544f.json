{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types';\nconst initialState = {\n  // token is grabbed from local storage\n  token: window.localStorage.getItem('token'),\n  isAuthenticated: null,\n  // in state of loading\n  loading: true,\n  // no user\n  user: null\n}; // function needs initial state and action type\n\nexport default function (state = initialState, action) {\n  // action is made up of the action type and the payiload\n  const {\n    type,\n    payload\n  } = action; // switch between type of regsiter sucess and register fail\n\n  switch (type) {\n    // if register success\n    case REGISTER_SUCCESS:\n      // set token with the token from the payload\n      window.localStorage.setItem('token', payload.token); // return the state, payload, true authenitcation and loading false\n\n      return { ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    // if register fail\n\n    case REGISTER_FAIL:\n      // gets rid of token\n      window.localStorage.removeItem('token');\n      return { // return state, null token, authentication false, and loading false\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Mission Control/Desktop/Choco/client/src/reducers/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","initialState","token","window","localStorage","getItem","isAuthenticated","loading","user","state","action","type","payload","setItem","removeItem"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,aAA3B,QAAgD,kBAAhD;AAEA,MAAMC,YAAY,GAAG;AACnB;AACAC,EAAAA,KAAK,EAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAFY;AAGnBC,EAAAA,eAAe,EAAE,IAHE;AAInB;AACAC,EAAAA,OAAO,EAAE,IALU;AAMnB;AACAC,EAAAA,IAAI,EAAE;AAPa,CAArB,C,CAUA;;AACA,eAAe,UAAUC,KAAK,GAAGR,YAAlB,EAAgCS,MAAhC,EAAwC;AACrD;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B,CAFqD,CAGrD;;AACA,UAAQC,IAAR;AACE;AACA,SAAKZ,gBAAL;AACE;AACAI,MAAAA,MAAM,CAACC,YAAP,CAAoBS,OAApB,CAA4B,OAA5B,EAAqCD,OAAO,CAACV,KAA7C,EAFF,CAGE;;AACA,aAAO,EACL,GAAGO,KADE;AAEL,WAAGG,OAFE;AAGLN,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;AAMA;;AACF,SAAKP,aAAL;AACE;AACAG,MAAAA,MAAM,CAACC,YAAP,CAAoBU,UAApB,CAA+B,OAA/B;AACA,aAAO,EACL;AACA,WAAGL,KAFE;AAGLP,QAAAA,KAAK,EAAE,IAHF;AAILI,QAAAA,eAAe,EAAE,KAJZ;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF;AACE,aAAOE,KAAP;AAxBJ;AA0BD","sourcesContent":["import { REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types'\r\n\r\nconst initialState = {\r\n  // token is grabbed from local storage\r\n  token: window.localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  // in state of loading\r\n  loading: true,\r\n  // no user\r\n  user: null\r\n}\r\n\r\n// function needs initial state and action type\r\nexport default function (state = initialState, action) {\r\n  // action is made up of the action type and the payiload\r\n  const { type, payload } = action\r\n  // switch between type of regsiter sucess and register fail\r\n  switch (type) {\r\n    // if register success\r\n    case REGISTER_SUCCESS:\r\n      // set token with the token from the payload\r\n      window.localStorage.setItem('token', payload.token)\r\n      // return the state, payload, true authenitcation and loading false\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      }\r\n      // if register fail\r\n    case REGISTER_FAIL:\r\n      // gets rid of token\r\n      window.localStorage.removeItem('token')\r\n      return {\r\n        // return state, null token, authentication false, and loading false\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
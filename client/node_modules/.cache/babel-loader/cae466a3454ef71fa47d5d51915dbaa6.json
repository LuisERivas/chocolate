{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mission Control\\\\Desktop\\\\Choco\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\nimport { Redirect } from 'react-router-dom';\n\nconst Login = ({\n  login,\n  isAuthenticated\n}) => {\n  _s();\n\n  // the object full of values is formData, function to update state(formData) is setform data\n  const [formData, setFormData] = useState({\n    // default state values\n    email: '',\n    password: ''\n  }); // destructure formData\n\n  const {\n    email,\n    password\n  } = formData; // the on chage at the level of the individual form input will call the onChange function that will call setFormData which\n  // changes the value based on the name of the target and the value inputed to the target\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  }); // on submit funciton arrow function\n\n\n  const onSubmit = e => {\n    // prevent lock\n    e.preventDefault();\n    console.log(formData);\n    login(email, password);\n  }; // redirect if logged in\n\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Sign in \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Access account \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          name: \"email\",\n          value: email,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          minLength: \"6\",\n          value: password,\n          onChange: e => onChange(e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/register\",\n          children: \" Register \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"vXTN3hVnZE2zLasKWER0SMCVGSc=\");\n\n_c = Login;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nlogin.PropTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\nexport default connect(null, {\n  login\n})(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Mission Control/Desktop/Choco/client/src/components/auth/Login.js"],"names":["React","Fragment","useState","connect","PropTypes","login","Redirect","Login","isAuthenticated","formData","setFormData","email","password","onChange","e","target","name","value","onSubmit","preventDefault","console","log","mapStateToProps","state","auth","func","isRequired","bool"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { login } from '../../actions/auth'\nimport { Redirect } from 'react-router-dom'\n\nconst Login = ({ login, isAuthenticated }) => {\n  // the object full of values is formData, function to update state(formData) is setform data\n  const [ formData, setFormData ] = useState({\n    // default state values\n    email: '',\n    password: ''\n  })\n\n  // destructure formData\n  const { email, password } = formData\n  // the on chage at the level of the individual form input will call the onChange function that will call setFormData which\n  // changes the value based on the name of the target and the value inputed to the target\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n\n  // on submit funciton arrow function\n  const onSubmit = e => {\n    // prevent lock\n    e.preventDefault()\n    console.log(formData)\n    login(email, password)\n  }\n\n  // redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />\n  }\n\n  return (\n    <Fragment>\n      <h1> Sign in </h1>\n      <p> Access account </p>\n      <form onSubmit={e => onSubmit(e)}>\n        <div>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={e => onChange(e)}\n            required />\n        </div>\n        <div>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            minLength='6'\n            value={password}\n            onChange={e => onChange(e)}\n            required />\n        </div>\n        <div>\n          <input type='submit' value='Login' />\n        </div>\n        <p>\n            Don't have an account?\n          <a href='/register' > Register </a>\n        </p>\n      </form>\n    </Fragment>\n  )\n}\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n})\n\nlogin.PropTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n}\n\nexport default connect(null, { login })(Login)\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from './types'; // bring in setAlert action\n\nimport { setAlert } from './alert'; // register user export with input of name, email, and password, then dispatch with header configuration\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; // set up body configureation by making name, email, and password into json format\n\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  }); // try catch to dispatch infomration\n\n  try {\n    // asych send axios request to api/users as post with body and config\n    const res = await axios.post('/api/users', body, config); // dispatch register success action type with payload of the res.data\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    }); // if there is an error when trying to dispatch the infomraiton\n  } catch (err) {\n    // establish errors as error response from data.errors\n    const errors = err.response.data.errors; // if there is a value in errors then dispatch each error with message and alert\n\n    if (errors) {\n      console.log('oinkkkkeersss');\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    } // then dispatch register failed action\n\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Mission Control/Desktop/Choco/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","setAlert","register","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","console","log","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,SAAhD,C,CACA;;AACA,SAASC,QAAT,QAAyB,SAAzB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMC,QAAN,IAAkB;AACvE,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf,CADuE,CAMvE;;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAER,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb,CAPuE,CAQvE;;AACA,MAAI;AACF;AACA,UAAMO,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB,CAFE,CAGF;;AACAD,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEf,gBADC;AAEPgB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR,CAJE,CAQF;AACD,GATD,CASE,OAAOC,GAAP,EAAY;AACZ;AACA,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC,CAFY,CAGZ;;AACA,QAAIA,MAAJ,EAAY;AACVE,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAH,MAAAA,MAAM,CAACI,OAAP,CAAeC,KAAK,IAAIjB,QAAQ,CAACL,QAAQ,CAACsB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD,KAPW,CAQZ;;;AACAlB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAGD;AACF,CA/BM","sourcesContent":["import axios from 'axios'\r\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from './types'\r\n// bring in setAlert action\r\nimport { setAlert } from './alert'\r\n\r\n// register user export with input of name, email, and password, then dispatch with header configuration\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  // set up body configureation by making name, email, and password into json format\r\n  const body = JSON.stringify({ name, email, password })\r\n  // try catch to dispatch infomration\r\n  try {\r\n    // asych send axios request to api/users as post with body and config\r\n    const res = await axios.post('/api/users', body, config)\r\n    // dispatch register success action type with payload of the res.data\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    })\r\n    // if there is an error when trying to dispatch the infomraiton\r\n  } catch (err) {\r\n    // establish errors as error response from data.errors\r\n    const errors = err.response.data.errors\r\n    // if there is a value in errors then dispatch each error with message and alert\r\n    if (errors) {\r\n      console.log('oinkkkkeersss')\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    }\r\n    // then dispatch register failed action\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
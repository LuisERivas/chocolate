{"ast":null,"code":"// import { REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types'\n// const initialState = {\n//   // token is grabbed from local storage\n//   token: localStorage.getItem('token'),\n//   isAuthenticated: null,\n//   // in state of loading\n//   loading: true,\n//   // no user\n//   user: null\n// }\n// // function needs initial state and action type\n// export default function (state = initialState, action) {\n//   // action is made up of the action type and the payiload\n//   const { type, payload } = action\n//   // switch between type of regsiter sucess and register fail\n//   switch (type) {\n//     // if register success\n//     case REGISTER_SUCCESS:\n//       // set token with the token from the payload\n//       localStorage.setItem('token', payload.token)\n//       // return the state, payload, true authenitcation and loading false\n//       return {\n//         ...state,\n//         ...payload,\n//         isAuthenticated: true,\n//         loading: false\n//       }\n//       // if register fail\n//     case REGISTER_FAIL:\n//       // gets rid of token\n//       console.log('poop')\n//       localStorage.removeItem('token')\n//       console.log(localStorage)\n//       return {\n//         // return state, null token, authentication false, and loading false\n//         ...state,\n//         token: null,\n//         isAuthenticated: false,\n//         loading: false\n//       }\n//     default:\n//       return state\n//   }\n// }\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../actions/types'; // set intial state for token in local storage\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\nexport default function cases(state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return { ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case LOGOUT:\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Mission Control/Desktop/Choco/client/src/reducers/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","initialState","token","localStorage","getItem","isAuthenticated","loading","user","cases","state","action","type","payload","setItem","removeItem"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,gBAAT,EAA2BC,aAA3B,EAA0CC,WAA1C,EAAuDC,UAAvD,EAAmEC,aAAnE,EAAkFC,UAAlF,EAA8FC,MAA9F,QAA4G,kBAA5G,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,IAFE;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;AAOA,eAAe,SAASC,KAAT,CAAgBC,KAAK,GAAGR,YAAxB,EAAsCS,MAAtC,EAA8C;AAC3D,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKf,WAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,IAAI,EAAEK;AAJD,OAAP;;AAMF,SAAKlB,gBAAL;AACA,SAAKI,aAAL;AACEK,MAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BD,OAAO,CAACV,KAAtC;AACA,aAAO,EACL,GAAGO,KADE;AAEL,WAAGG,OAFE;AAGLP,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKN,MAAL;AACA,SAAKL,aAAL;AACA,SAAKE,UAAL;AACA,SAAKE,UAAL;AACEI,MAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACA,aAAO,EACL,GAAGL,KADE;AAELP,QAAAA,KAAK,EAAE,IAFF;AAGLG,QAAAA,eAAe,EAAE,KAHZ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF;AACE,aAAOG,KAAP;AA7BJ;AA+BD","sourcesContent":["// import { REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types'\n\n// const initialState = {\n//   // token is grabbed from local storage\n//   token: localStorage.getItem('token'),\n//   isAuthenticated: null,\n//   // in state of loading\n//   loading: true,\n//   // no user\n//   user: null\n// }\n\n// // function needs initial state and action type\n// export default function (state = initialState, action) {\n//   // action is made up of the action type and the payiload\n//   const { type, payload } = action\n//   // switch between type of regsiter sucess and register fail\n//   switch (type) {\n//     // if register success\n//     case REGISTER_SUCCESS:\n//       // set token with the token from the payload\n//       localStorage.setItem('token', payload.token)\n//       // return the state, payload, true authenitcation and loading false\n//       return {\n//         ...state,\n//         ...payload,\n//         isAuthenticated: true,\n//         loading: false\n//       }\n//       // if register fail\n//     case REGISTER_FAIL:\n//       // gets rid of token\n//       console.log('poop')\n//       localStorage.removeItem('token')\n//       console.log(localStorage)\n//       return {\n//         // return state, null token, authentication false, and loading false\n//         ...state,\n//         token: null,\n//         isAuthenticated: false,\n//         loading: false\n//       }\n//     default:\n//       return state\n//   }\n// }\n\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../actions/types'\n\n// set intial state for token in local storage\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n}\n\nexport default function cases (state = initialState, action) {\n  const { type, payload } = action\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      }\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token)\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      }\n    case LOGOUT:\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n      localStorage.removeItem('token')\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// bring in alerts\nimport { SET_ALERT, REMOVE_ALERT } from './types'; // bring in uuid\n\nimport { v4 as uuidv4 } from 'uuid'; // export set alert\n// uses msg and alert type, with timeout length\n\nexport const setAlert = (msg, alertType, timeout = 3000) => dispatch => {\n  // create unique id using uuid\n  const id = uuidv4(); // will dispatch to the reducer the following things\n\n  dispatch({\n    // the type will be set as SET_ALERT\n    type: SET_ALERT,\n    // the payload will consist of a message, alert type and the unique id\n    payload: {\n      msg,\n      alertType,\n      id\n    }\n  }); // setTimeout (to get rid of alert)\n\n  setTimeout(() => // the time out dispatches type and payload\n  dispatch({\n    // the type is remove alert which gets rid of the alert\n    type: REMOVE_ALERT,\n    // the payload is the current id that is in the state in order to get rid of the same id alert\n    payload: id\n  }), timeout);\n};","map":{"version":3,"sources":["C:/Users/Mission Control/Desktop/Choco/client/src/actions/alert.js"],"names":["SET_ALERT","REMOVE_ALERT","v4","uuidv4","setAlert","msg","alertType","timeout","dispatch","id","type","payload","setTimeout"],"mappings":"AAAA;AACA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,SAAxC,C,CAEA;;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B,C,CAEA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,SAAN,EAAiBC,OAAO,GAAG,IAA3B,KAAoCC,QAAQ,IAAI;AACtE;AACA,QAAMC,EAAE,GAAGN,MAAM,EAAjB,CAFsE,CAGtE;;AACAK,EAAAA,QAAQ,CAAC;AACP;AACAE,IAAAA,IAAI,EAAEV,SAFC;AAGP;AACAW,IAAAA,OAAO,EAAE;AAAEN,MAAAA,GAAF;AAAOC,MAAAA,SAAP;AAAkBG,MAAAA;AAAlB;AAJF,GAAD,CAAR,CAJsE,CAWtE;;AACAG,EAAAA,UAAU,CAAC,MACX;AACEJ,EAAAA,QAAQ,CAAC;AACP;AACAE,IAAAA,IAAI,EAAET,YAFC;AAGP;AACAU,IAAAA,OAAO,EAAEF;AAJF,GAAD,CAFA,EAMUF,OANV,CAAV;AAQD,CApBM","sourcesContent":["// bring in alerts\nimport { SET_ALERT, REMOVE_ALERT } from './types'\n\n// bring in uuid\nimport { v4 as uuidv4 } from 'uuid'\n\n// export set alert\n// uses msg and alert type, with timeout length\nexport const setAlert = (msg, alertType, timeout = 3000) => dispatch => {\n  // create unique id using uuid\n  const id = uuidv4()\n  // will dispatch to the reducer the following things\n  dispatch({\n    // the type will be set as SET_ALERT\n    type: SET_ALERT,\n    // the payload will consist of a message, alert type and the unique id\n    payload: { msg, alertType, id }\n  })\n\n  // setTimeout (to get rid of alert)\n  setTimeout(() =>\n  // the time out dispatches type and payload\n    dispatch({\n      // the type is remove alert which gets rid of the alert\n      type: REMOVE_ALERT,\n      // the payload is the current id that is in the state in order to get rid of the same id alert\n      payload: id }), timeout\n  )\n}\n"]},"metadata":{},"sourceType":"module"}
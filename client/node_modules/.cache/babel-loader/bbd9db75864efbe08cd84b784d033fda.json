{"ast":null,"code":"// import axios from 'axios'\n// import { REGISTER_SUCCESS, REGISTER_FAIL } from './types'\n// // bring in setAlert action\n// import { setAlert } from './alert'\n// // register user export with input of name, email, and password, then dispatch with header configuration\n// export const register = ({ name, email, password }) => async dispatch => {\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   }\n//   // set up body configureation by making name, email, and password into json format\n//   const body = JSON.stringify({ name, email, password })\n//   // try catch to dispatch infomration\n//   try {\n//     // asych send axios request to api/users as post with body and config\n//     const res = await axios.post('/api/users', body, config)\n//     // dispatch register success action type with payload of the res.data\n//     dispatch({\n//       type: REGISTER_SUCCESS,\n//       payload: res.data\n//     })\n//     // if there is an error when trying to dispatch the infomraiton\n//   } catch (err) {\n//     // establish errors as error response from data.errors\n//     const errors = err.response.data.errors\n//     console.log(errors)\n//     // if there is a value in errors then dispatch each error with message and alert\n//     if (errors) {\n//       console.log('oinkkkkeersss')\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n//     }\n//     // then dispatch register failed action\n//     dispatch({\n//       type: REGISTER_FAIL\n//     })\n//   }\n// }\nimport axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from './types';\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Mission Control/Desktop/Choco/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","register","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,SAAhD;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMC,QAAN,IAAkB;AACvE,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AADI,GAAf;AAGA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAER,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AACA,MAAI;AACF,UAAMO,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AACAD,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEd,gBADC;AAEPe,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AACA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIf,QAAQ,CAACP,QAAQ,CAACsB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AACDhB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;AAGD;AACF,CApBM","sourcesContent":["// import axios from 'axios'\n// import { REGISTER_SUCCESS, REGISTER_FAIL } from './types'\n// // bring in setAlert action\n// import { setAlert } from './alert'\n\n// // register user export with input of name, email, and password, then dispatch with header configuration\n// export const register = ({ name, email, password }) => async dispatch => {\n//   const config = {\n//     headers: {\n//       'Content-Type': 'application/json'\n//     }\n//   }\n//   // set up body configureation by making name, email, and password into json format\n//   const body = JSON.stringify({ name, email, password })\n//   // try catch to dispatch infomration\n//   try {\n//     // asych send axios request to api/users as post with body and config\n//     const res = await axios.post('/api/users', body, config)\n//     // dispatch register success action type with payload of the res.data\n//     dispatch({\n//       type: REGISTER_SUCCESS,\n//       payload: res.data\n//     })\n//     // if there is an error when trying to dispatch the infomraiton\n//   } catch (err) {\n//     // establish errors as error response from data.errors\n//     const errors = err.response.data.errors\n//     console.log(errors)\n//     // if there is a value in errors then dispatch each error with message and alert\n//     if (errors) {\n//       console.log('oinkkkkeersss')\n//       errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n//     }\n//     // then dispatch register failed action\n//     dispatch({\n//       type: REGISTER_FAIL\n//     })\n//   }\n// }\n\nimport axios from 'axios'\nimport { setAlert } from './alert'\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from './types'\n\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: { 'Content-Type': 'application/json' }\n  }\n  const body = JSON.stringify({ name, email, password })\n  try {\n    const res = await axios.post('/api/users', body, config)\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    })\n  } catch (err) {\n    const errors = err.response.data.errors\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}